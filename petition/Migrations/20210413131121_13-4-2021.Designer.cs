// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using petition.Models;

namespace petition.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210413131121_13-4-2021")]
    partial class _1342021
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("petition.DB.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChargeBackCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChargeBackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAssgBatch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReceivedBatch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitialCount")
                        .HasColumnType("int");

                    b.Property<string>("KpmuserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KpmuserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<bool>("ProcessingComplete")
                        .HasColumnType("bit");

                    b.Property<int?>("PurgedCount")
                        .HasColumnType("int");

                    b.Property<bool>("RawComplete")
                        .HasColumnType("bit");

                    b.Property<int?>("RawCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("SigAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("SigValue")
                        .HasColumnType("smallint");

                    b.Property<int?>("SubmittedCount")
                        .HasColumnType("int");

                    b.Property<bool>("ValidationComplete")
                        .HasColumnType("bit");

                    b.HasKey("BatchId");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("petition.DB.BatchDetail", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("BatchStatus")
                        .HasColumnType("int");

                    b.Property<int>("CircNewReg")
                        .HasColumnType("int");

                    b.Property<string>("Circfullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Circid")
                        .HasColumnType("int");

                    b.Property<int>("Circinitsigs")
                        .HasColumnType("int");

                    b.Property<int?>("Circrawcount")
                        .HasColumnType("int");

                    b.Property<int>("Entryid")
                        .HasColumnType("int");

                    b.Property<int?>("PcAddrIllegOrCopy")
                        .HasColumnType("int");

                    b.Property<int?>("PcDiffCounty")
                        .HasColumnType("int");

                    b.Property<int?>("PcDupSig")
                        .HasColumnType("int");

                    b.Property<int?>("PcForgery")
                        .HasColumnType("int");

                    b.Property<int?>("PcHwsignForOther")
                        .HasColumnType("int");

                    b.Property<int?>("PcIncomAddr")
                        .HasColumnType("int");

                    b.Property<int?>("PcIncomDeclCirc")
                        .HasColumnType("int");

                    b.Property<int?>("PcInitials")
                        .HasColumnType("int");

                    b.Property<int?>("PcNameTwiceNoSig")
                        .HasColumnType("int");

                    b.Property<int?>("PcOther")
                        .HasColumnType("int");

                    b.Property<int?>("PcPencilUsed")
                        .HasColumnType("int");

                    b.Property<int?>("PcPobox")
                        .HasColumnType("int");

                    b.Property<int?>("PcRubStampUsed")
                        .HasColumnType("int");

                    b.Property<int?>("PcSigPrintedOrPrintIlleg")
                        .HasColumnType("int");

                    b.Property<int?>("PcWhiteOut")
                        .HasColumnType("int");

                    b.Property<int?>("PcWomanSignMrsHusbandFname")
                        .HasColumnType("int");

                    b.ToTable("BatchDetails");
                });

            modelBuilder.Entity("petition.DB.City", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("petition.DB.CityVoter", b =>
                {
                    b.Property<string>("DtBirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtLastUpdateDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtOrigRegDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtRegDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDuplicateIdflag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISubDistrict0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISubDistrict1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISubDistrict2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISubDistrict3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISubDistrict4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISubDistrict5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LVoterUniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAffNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SBirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDistrictId0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDistrictId1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDistrictId2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDistrictId3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDistrictId4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDistrictId5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SHouseNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SNameSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPostDir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPreDir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPrecinctId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPrecinctPortion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSitusState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSitusZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SStreetSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUnitAbbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUnitNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUserCode1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUserCode2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SVoterTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzAvstatusAbbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzAvstatusDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzDistrictName0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzDistrictName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzDistrictName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzDistrictName3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzDistrictName4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzDistrictName5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzLanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzMailAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzMailAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzMailAddress3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzMailAddress4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzMailZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzNameFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzNameLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzNameMiddle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzPartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzPrecinctName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzSitusAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzSitusCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzStateVoterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzStatusReasonDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SzStreetName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CityVoters");
                });

            modelBuilder.Entity("petition.DB.Cntybad", b =>
                {
                    b.Property<int?>("Badcount")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.ToTable("Cntybads");
                });

            modelBuilder.Entity("petition.DB.Cntydup", b =>
                {
                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dupcount")
                        .HasColumnType("int");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.ToTable("Cntydups");
                });

            modelBuilder.Entity("petition.DB.Cntygood", b =>
                {
                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.Property<int?>("Validcount")
                        .HasColumnType("int");

                    b.ToTable("Cntygoods");
                });

            modelBuilder.Entity("petition.DB.Cntytotal", b =>
                {
                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Ttlbad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttldup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttlpercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttlvalid")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Cntytotals");
                });

            modelBuilder.Entity("petition.DB.Combinedrecord", b =>
                {
                    b.Property<int?>("Badcount")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.Property<int?>("Validcount")
                        .HasColumnType("int");

                    b.ToTable("Combinedrecords");
                });

            modelBuilder.Entity("petition.DB.CoordBatchList", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("Circid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Circinitsigs")
                        .HasColumnType("int");

                    b.Property<string>("Coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Initsigs")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Netcount")
                        .HasColumnType("int");

                    b.Property<int?>("Purgecount")
                        .HasColumnType("int");

                    b.Property<int?>("Rawcount")
                        .HasColumnType("int");

                    b.ToTable("CoordBatchLists");
                });

            modelBuilder.Entity("petition.DB.CoordBatchListSubmitted", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("Circid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Circinitsigs")
                        .HasColumnType("int");

                    b.Property<string>("Coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Initsigs")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Netcount")
                        .HasColumnType("int");

                    b.Property<int?>("Purgecount")
                        .HasColumnType("int");

                    b.Property<int?>("Rawcount")
                        .HasColumnType("int");

                    b.ToTable("CoordBatchListSubmitteds");
                });

            modelBuilder.Entity("petition.DB.CoordBatchListSubmittedTemp", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("Coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Suminitsigs")
                        .HasColumnType("int");

                    b.ToTable("CoordBatchListSubmittedTemps");
                });

            modelBuilder.Entity("petition.DB.CoordBatchListTemp", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("Coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Suminitsigs")
                        .HasColumnType("int");

                    b.ToTable("CoordBatchListTemps");
                });

            modelBuilder.Entity("petition.DB.CoordDup", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("Batchentryid")
                        .HasColumnType("int");

                    b.Property<int>("Circid")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<int>("Recordid")
                        .HasColumnType("int");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.ToTable("CoordDups");
                });

            modelBuilder.Entity("petition.DB.CoordSummary", b =>
                {
                    b.Property<string>("Circid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Initsigs")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Netcount")
                        .HasColumnType("int");

                    b.Property<int?>("Purgecount")
                        .HasColumnType("int");

                    b.Property<int?>("Rawcount")
                        .HasColumnType("int");

                    b.ToTable("CoordSummaries");
                });

            modelBuilder.Entity("petition.DB.CoordUpdate", b =>
                {
                    b.Property<int>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<int>("Voterid")
                        .HasColumnType("int");

                    b.ToTable("CoordUpdates");
                });

            modelBuilder.Entity("petition.DB.Coordinator", b =>
                {
                    b.Property<int>("CoordinatorId")
                        .HasColumnType("int");

                    b.Property<string>("Coordinatorname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Coordinators");
                });

            modelBuilder.Entity("petition.DB.County", b =>
                {
                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("Countyname")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("petition.DB.CountyTotalsView", b =>
                {
                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dupcounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dupdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dupvoterid")
                        .HasColumnType("int");

                    b.Property<int>("Petid")
                        .HasColumnType("int");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Voterid")
                        .HasColumnType("int");

                    b.ToTable("CountyTotalsViews");
                });

            modelBuilder.Entity("petition.DB.DailyReport", b =>
                {
                    b.Property<DateTime?>("Countdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.ToTable("DailyReports");
                });

            modelBuilder.Entity("petition.DB.KpmCoordUpdate", b =>
                {
                    b.Property<int>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<int>("Voterid")
                        .HasColumnType("int");

                    b.ToTable("KpmCoordUpdates");
                });

            modelBuilder.Entity("petition.DB.KpmUser", b =>
                {
                    b.Property<int>("KpmuserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoordAssigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DnnUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DnnuserIdOld")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KpmuserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KpmuserId");

                    b.ToTable("KpmUsers");
                });

            modelBuilder.Entity("petition.DB.KpmUserTransferTable", b =>
                {
                    b.Property<int?>("Transferid")
                        .HasColumnType("int");

                    b.ToTable("KpmUserTransferTables");
                });

            modelBuilder.Entity("petition.DB.KpmUsersBck", b =>
                {
                    b.Property<string>("Addr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoordAssigned")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DnnUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DnnuserIdOld")
                        .HasColumnType("int");

                    b.Property<int>("Enteredby")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KpmuserId")
                        .HasColumnType("int");

                    b.Property<string>("KpmuserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("KpmUsersBcks");
                });

            modelBuilder.Entity("petition.DB.KpmUsersEmpty", b =>
                {
                    b.Property<string>("Addr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoordAssigned")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DnnUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DnnuserIdOld")
                        .HasColumnType("int");

                    b.Property<int>("Enteredby")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KpmuserId")
                        .HasColumnType("int");

                    b.Property<string>("KpmuserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tempid")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("KpmUsersEmpties");
                });

            modelBuilder.Entity("petition.DB.KpmUsersSav", b =>
                {
                    b.Property<string>("Addr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoordAssigned")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DnnUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DnnuserIdOld")
                        .HasColumnType("int");

                    b.Property<int>("Enteredby")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KpmuserId")
                        .HasColumnType("int");

                    b.Property<string>("KpmuserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("KpmUsersSavs");
                });

            modelBuilder.Entity("petition.DB.KpmcircReport", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("Circid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Circinitsigs")
                        .HasColumnType("int");

                    b.Property<int?>("Circrawcount")
                        .HasColumnType("int");

                    b.Property<string>("Coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Entryid")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PcAddrIllegOrCopy")
                        .HasColumnType("int");

                    b.Property<int?>("PcDupSig")
                        .HasColumnType("int");

                    b.Property<int?>("PcForgery")
                        .HasColumnType("int");

                    b.Property<int?>("PcHwsignForOther")
                        .HasColumnType("int");

                    b.Property<int?>("PcIncomDeclCirc")
                        .HasColumnType("int");

                    b.Property<int?>("PcInitials")
                        .HasColumnType("int");

                    b.Property<int?>("PcNameTwiceNoSig")
                        .HasColumnType("int");

                    b.Property<int?>("PcOther")
                        .HasColumnType("int");

                    b.Property<int?>("PcPencilUsed")
                        .HasColumnType("int");

                    b.Property<int?>("PcRubStampUsed")
                        .HasColumnType("int");

                    b.Property<int?>("PcSigPrintedOrPrintIlleg")
                        .HasColumnType("int");

                    b.Property<int?>("PcWhiteOut")
                        .HasColumnType("int");

                    b.Property<int?>("PcWomanSignMrsHusbandFname")
                        .HasColumnType("int");

                    b.Property<int?>("PcdiffCounty")
                        .HasColumnType("int");

                    b.Property<int?>("Pcincomaddr")
                        .HasColumnType("int");

                    b.Property<int?>("Pcpobox")
                        .HasColumnType("int");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.ToTable("KpmcircReports");
                });

            modelBuilder.Entity("petition.DB.KpmcircReportSubmitted", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<string>("Circid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Circinitsigs")
                        .HasColumnType("int");

                    b.Property<int?>("Circrawcount")
                        .HasColumnType("int");

                    b.Property<string>("Coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Entryid")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PcAddrIllegOrCopy")
                        .HasColumnType("int");

                    b.Property<int?>("PcDupSig")
                        .HasColumnType("int");

                    b.Property<int?>("PcForgery")
                        .HasColumnType("int");

                    b.Property<int?>("PcHwsignForOther")
                        .HasColumnType("int");

                    b.Property<int?>("PcIncomDeclCirc")
                        .HasColumnType("int");

                    b.Property<int?>("PcInitials")
                        .HasColumnType("int");

                    b.Property<int?>("PcNameTwiceNoSig")
                        .HasColumnType("int");

                    b.Property<int?>("PcOther")
                        .HasColumnType("int");

                    b.Property<int?>("PcPencilUsed")
                        .HasColumnType("int");

                    b.Property<int?>("PcRubStampUsed")
                        .HasColumnType("int");

                    b.Property<int?>("PcSigPrintedOrPrintIlleg")
                        .HasColumnType("int");

                    b.Property<int?>("PcWhiteOut")
                        .HasColumnType("int");

                    b.Property<int?>("PcWomanSignMrsHusbandFname")
                        .HasColumnType("int");

                    b.Property<int?>("PcdiffCounty")
                        .HasColumnType("int");

                    b.Property<int?>("Pcincomaddr")
                        .HasColumnType("int");

                    b.Property<int?>("Pcpobox")
                        .HasColumnType("int");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.ToTable("KpmcircReportSubmitteds");
                });

            modelBuilder.Entity("petition.DB.Petition", b =>
                {
                    b.Property<int>("PetitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CityPetition")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Petitiondescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PetitionId");

                    b.ToTable("Petitions");
                });

            modelBuilder.Entity("petition.DB.PetitionSummary", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<int?>("Batchinitcount")
                        .HasColumnType("int");

                    b.Property<int?>("Batchpurgecount")
                        .HasColumnType("int");

                    b.Property<int?>("Batchrawcount")
                        .HasColumnType("int");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.ToTable("PetitionSummaries");
                });

            modelBuilder.Entity("petition.DB.PetitionSummarySubmitted", b =>
                {
                    b.Property<int?>("Batchid")
                        .HasColumnType("int");

                    b.Property<int?>("Batchnewreg")
                        .HasColumnType("int");

                    b.Property<int?>("Batchpurgecount")
                        .HasColumnType("int");

                    b.Property<int?>("Batchrawcount")
                        .HasColumnType("int");

                    b.Property<int?>("Batchsubmittedcount")
                        .HasColumnType("int");

                    b.Property<int?>("Petitionid")
                        .HasColumnType("int");

                    b.ToTable("PetitionSummarySubmitteds");
                });

            modelBuilder.Entity("petition.DB.Tempcount", b =>
                {
                    b.Property<int?>("Badcount")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Votercount")
                        .HasColumnType("int");

                    b.ToTable("Tempcounts");
                });

            modelBuilder.Entity("petition.DB.Temptable", b =>
                {
                    b.Property<string>("Coordinatorid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.ToTable("Temptables");
                });

            modelBuilder.Entity("petition.DB.Totalupdate", b =>
                {
                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Countydups")
                        .HasColumnType("int");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Totalupdates");
                });

            modelBuilder.Entity("petition.DB.Validator", b =>
                {
                    b.Property<int?>("Dupcount")
                        .HasColumnType("int");

                    b.Property<int?>("Notfoundcount")
                        .HasColumnType("int");

                    b.Property<int?>("Validatorid")
                        .HasColumnType("int");

                    b.Property<string>("Validatorname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Validcount")
                        .HasColumnType("int");

                    b.ToTable("Validators");
                });

            modelBuilder.Entity("petition.DB.Validatorcount", b =>
                {
                    b.Property<int?>("Badcount")
                        .HasColumnType("int");

                    b.Property<int?>("Dupcount")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Rolename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Validcount")
                        .HasColumnType("int");

                    b.ToTable("Validatorcounts");
                });

            modelBuilder.Entity("petition.DB.Validatortotal", b =>
                {
                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Ttlbad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttldup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttlgood")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Valid")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Validatortotals");
                });

            modelBuilder.Entity("petition.DB.Validatortotals3valid", b =>
                {
                    b.Property<decimal?>("Ttlbad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttldup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttlgood")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Valid")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Validatortotals3valids");
                });

            modelBuilder.Entity("petition.DB.ValidatortotalsOldnew", b =>
                {
                    b.Property<decimal?>("Ttlbad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttldup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttlgood")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Valid")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ValidatortotalsOldnews");
                });

            modelBuilder.Entity("petition.DB.Validatortotalsall", b =>
                {
                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Ttlbad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttldup")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Ttlgood")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Valid")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Validatortotalsalls");
                });

            modelBuilder.Entity("petition.DB.Voter", b =>
                {
                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ln")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namesuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resaddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resstate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Voterid")
                        .HasColumnType("int");

                    b.Property<string>("Zp")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Voters");
                });

            modelBuilder.Entity("petition.DB.VoterDup", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("Batchentryid")
                        .HasColumnType("int");

                    b.Property<int>("Circid")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<int>("Recordid")
                        .HasColumnType("int");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.ToTable("VoterDups");
                });

            modelBuilder.Entity("petition.DB.VoterRecord", b =>
                {
                    b.Property<int>("Batchentryid")
                        .HasColumnType("int");

                    b.Property<int>("Batchid")
                        .HasColumnType("int");

                    b.Property<int>("Circid")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<int>("Voterid")
                        .HasColumnType("int");

                    b.ToTable("VoterRecords");
                });

            modelBuilder.Entity("petition.DB.VwBadDetailByEntryId", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<string>("Circfullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Entryid")
                        .HasColumnType("int");

                    b.Property<string>("Fn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ln")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<string>("Resaddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resstate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zp")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("VwBadDetailByEntryIds");
                });

            modelBuilder.Entity("petition.DB.VwBatchesNotReceived", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<int?>("DnnUserId")
                        .HasColumnType("int");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("VwBatchesNotReceiveds");
                });

            modelBuilder.Entity("petition.DB.VwGoodDetailByEntryId", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<string>("Circfullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Entryid")
                        .HasColumnType("int");

                    b.Property<string>("Fn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ln")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<string>("Resaddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resstate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zp")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("VwGoodDetailByEntryIds");
                });

            modelBuilder.Entity("petition.DB.VwVoterDupsWpetitionName", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("Batchentryid")
                        .HasColumnType("int");

                    b.Property<int>("Circid")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Recordid")
                        .HasColumnType("int");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.ToTable("VwVoterDupsWpetitionNames");
                });

            modelBuilder.Entity("petition.DB.VwVoterRecordWpetitionName", b =>
                {
                    b.Property<int>("Batchentryid")
                        .HasColumnType("int");

                    b.Property<int>("Batchid")
                        .HasColumnType("int");

                    b.Property<int>("Circid")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dateentered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Enteredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Voterid")
                        .HasColumnType("int");

                    b.ToTable("VwVoterRecordWpetitionNames");
                });

            modelBuilder.Entity("petition.Models.DbModel.UserRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("effectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("roleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("roleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("petition.Models.ViewModels.DisplayBatchList", b =>
                {
                    b.Property<int>("BadTotal")
                        .HasColumnType("int");

                    b.Property<int>("BatchStatus")
                        .HasColumnType("int");

                    b.Property<int>("CircNewReg")
                        .HasColumnType("int");

                    b.Property<int>("SubmittedCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalSigs")
                        .HasColumnType("int");

                    b.Property<int>("batchid")
                        .HasColumnType("int");

                    b.Property<int>("circinitsigs")
                        .HasColumnType("int");

                    b.Property<int?>("circrawcount")
                        .HasColumnType("int");

                    b.Property<int>("entryid")
                        .HasColumnType("int");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kpmuserid")
                        .HasColumnType("int");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pcAddrIllegOrCopy")
                        .HasColumnType("int");

                    b.Property<int?>("pcDupSig")
                        .HasColumnType("int");

                    b.Property<int?>("pcForgery")
                        .HasColumnType("int");

                    b.Property<int?>("pcHWSignForOther")
                        .HasColumnType("int");

                    b.Property<int?>("pcIncomAddr")
                        .HasColumnType("int");

                    b.Property<int?>("pcIncomDeclCirc")
                        .HasColumnType("int");

                    b.Property<int?>("pcInitials")
                        .HasColumnType("int");

                    b.Property<int?>("pcNameTwiceNoSig")
                        .HasColumnType("int");

                    b.Property<int?>("pcOther")
                        .HasColumnType("int");

                    b.Property<int?>("pcPencilUsed")
                        .HasColumnType("int");

                    b.Property<int?>("pcRubStampUsed")
                        .HasColumnType("int");

                    b.Property<int?>("pcSigPrintedOrPrintIlleg")
                        .HasColumnType("int");

                    b.Property<int?>("pcWhiteOut")
                        .HasColumnType("int");

                    b.Property<int?>("pcWomanSignMrsHusbandFname")
                        .HasColumnType("int");

                    b.Property<int?>("pcdiffcounty")
                        .HasColumnType("int");

                    b.Property<int?>("pcpobox")
                        .HasColumnType("int");

                    b.ToTable("DisplayBatchList");
                });

            modelBuilder.Entity("petition.Models.ViewModels.DisplayBathListForPrint", b =>
                {
                    b.Property<int>("BadCount")
                        .HasColumnType("int");

                    b.Property<int>("BatchID")
                        .HasColumnType("int");

                    b.Property<int>("BatchStatus")
                        .HasColumnType("int");

                    b.Property<int>("CircNewReg")
                        .HasColumnType("int");

                    b.Property<int>("GoodCount")
                        .HasColumnType("int");

                    b.Property<int>("GoodPercent")
                        .HasColumnType("int");

                    b.Property<int>("SubmittedCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalSigs")
                        .HasColumnType("int");

                    b.Property<string>("circfullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("circid")
                        .HasColumnType("int");

                    b.Property<int>("circinitsigs")
                        .HasColumnType("int");

                    b.Property<int?>("circrawcount")
                        .HasColumnType("int");

                    b.Property<int>("entryid")
                        .HasColumnType("int");

                    b.Property<int?>("pcAddrIllegOrCopy")
                        .HasColumnType("int");

                    b.Property<int?>("pcDiffCounty")
                        .HasColumnType("int");

                    b.Property<int?>("pcDupSig")
                        .HasColumnType("int");

                    b.Property<int?>("pcForgery")
                        .HasColumnType("int");

                    b.Property<int?>("pcHWSignForOther")
                        .HasColumnType("int");

                    b.Property<int?>("pcIncomAddr")
                        .HasColumnType("int");

                    b.Property<int?>("pcIncomDeclCirc")
                        .HasColumnType("int");

                    b.Property<int?>("pcInitials")
                        .HasColumnType("int");

                    b.Property<int?>("pcNameTwiceNoSig")
                        .HasColumnType("int");

                    b.Property<int?>("pcOther")
                        .HasColumnType("int");

                    b.Property<int?>("pcPOBox")
                        .HasColumnType("int");

                    b.Property<int?>("pcPencilUsed")
                        .HasColumnType("int");

                    b.Property<int?>("pcRubStampUsed")
                        .HasColumnType("int");

                    b.Property<int?>("pcSigPrintedOrPrintIlleg")
                        .HasColumnType("int");

                    b.Property<int?>("pcWhiteOut")
                        .HasColumnType("int");

                    b.Property<int?>("pcWomanSignMrsHusbandFname")
                        .HasColumnType("int");

                    b.ToTable("DisplayBathListForPrint");
                });

            modelBuilder.Entity("petition.Models.ViewModels.GetBatchList", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAssgBatch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReceivedBatch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("KpmuserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Petitionid")
                        .HasColumnType("int");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurgedCount")
                        .HasColumnType("int");

                    b.Property<int?>("RawCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("SigAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("SigValue")
                        .HasColumnType("smallint");

                    b.Property<int?>("SubmittedCount")
                        .HasColumnType("int");

                    b.ToTable("GetBatchList");
                });

            modelBuilder.Entity("petition.Models.ViewModels.GetBatches", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("ChargeBackCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChargeBackDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAssgBatch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReceivedBatch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("KpmuserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurgedCount")
                        .HasColumnType("int");

                    b.Property<int?>("RawCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("SigAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("SigValue")
                        .HasColumnType("smallint");

                    b.Property<int?>("SubmittedCount")
                        .HasColumnType("int");

                    b.ToTable("GetBatches");
                });

            modelBuilder.Entity("petition.Models.ViewModels.GetCirculator", b =>
                {
                    b.Property<string>("addr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coordassigned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("displayname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kpmuserID")
                        .HasColumnType("int");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GetCirculator");
                });

            modelBuilder.Entity("petition.Models.ViewModels.GetPetetion", b =>
                {
                    b.Property<bool?>("CityPetition")
                        .HasColumnType("bit");

                    b.Property<int>("PetitionId")
                        .HasColumnType("int");

                    b.Property<string>("Petitiondescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Petitionname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.ToTable("GetPetetion");
                });

            modelBuilder.Entity("petition.Models.DbModel.ApplicationIdentityUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Authorize")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationIdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
